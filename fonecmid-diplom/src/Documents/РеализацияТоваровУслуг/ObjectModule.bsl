
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения); 
		//++ Бозырь С.Р. 15.07.2025 Дипломная работа
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СтрокаТаблицыЗначений") Тогда 
		ВКМ_ЗаполнитьИзКоллекцииЗначений(ДанныеЗаполнения);
		//--
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) 
	
	//++ Бозырь С.Р. 27.07.2025 "Дипломная работа"
	НепроверяемыеРеквизиты = Новый Массив();
	
	// Исключение проверки основания при абонентском обслуживании
	Если Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		НепроверяемыеРеквизиты.Добавить("Основание"); 
	КонецЕсли;
	
	Для Каждого Реквизит Из НепроверяемыеРеквизиты Цикл
		
		ПорядковыйНомер = ПроверяемыеРеквизиты.Найти(Реквизит);
		Если ПорядковыйНомер <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПорядковыйНомер);
		КонецЕсли;
		
	КонецЦикла;
	//-- Бозырь С.Р.
  
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//++ Бозырь С.Р. 27.07.2025 Дипломная работа
	ВКМ_ЗаписатьДвижениеАбонентскогоОбслуживанияВоВзаиморасчетыСКлиентами();
	//-- Бозырь С.Р

КонецПроцедуры

Процедура ВКМ_ВыполнитьАвтозаполнение() Экспорт
	
	//++ Бозырь С.Р. 11.07.2025 Дипломная работа
	АбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	РаботаСпециалиста = Константы.ВКМ_НоменклатураРаботаСпециалиста.Получить();
	
	Если Не ЗначениеЗаполнено(АбонентскаяПлата) Или Не ЗначениеЗаполнено(РаботаСпециалиста) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заполнено значение одной или обеих констант: ""Номенклатура абонентская плата"" и ""Номенклатура работы специалиста""!";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
		 
	Услуги.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты КАК СуммаАбонентскойПлаты,
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор
		|	И ДоговорыКонтрагентов.ВКМ_СуммаАбонентскойПлаты > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода,, Клиент = &Клиент
		|	И Договор = &Договор) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты";
	
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаАбонентскаяПлата = МассивРезультатов[0].Выбрать();
	
	Если ВыборкаАбонентскаяПлата.Следующий() Тогда
		
		НоваяУслуга = Услуги.Добавить();
		НоваяУслуга.Номенклатура = АбонентскаяПлата;
		НоваяУслуга.Количество = 1;
		Новаяуслуга.Цена = ВыборкаАбонентскаяПлата.СуммаАбонентскойПлаты;
		НоваяУслуга.Сумма = ВыборкаАбонентскаяПлата.СуммаАбонентскойПлаты;
		
		СтоимостьЧасаРаботы = ВыборкаАбонентскаяПлата.СтоимостьЧасаРаботы;
		
	КонецЕсли;
	
	ВыборкаРаботаСпециалиста = МассивРезультатов[1].Выбрать();
	
	Пока ВыборкаРаботаСпециалиста.Следующий() Цикл
		
		НоваяУслуга = Услуги.Добавить();
		НоваяУслуга.Номенклатура = РаботаСпециалиста;
		НоваяУслуга.Количество = ВыборкаРаботаСпециалиста.КоличествоЧасовОборот;
		Новаяуслуга.Цена = СтоимостьЧасаРаботы;
		НоваяУслуга.Сумма = ВыборкаРаботаСпециалиста.СуммаКОплатеОборот;
				
	КонецЦикла;
	
КонецПроцедуры

Процедура ВКМ_ЗаполнитьИзКоллекцииЗначений(ДанныеЗаполнения)
		
	//++ Бозырь С.Р. 11.07.2025 Дипломная работа	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	УстановитьНовыйНомер();
		
КонецПроцедуры

Процедура ВКМ_ЗаписатьДвижениеАбонентскогоОбслуживанияВоВзаиморасчетыСКлиентами()
		
	//++ Бозырь С.Р. 27.07.2025 Дипломная работа		
	Движения.ВКМ_ВзаиморасчетыСКлиентами.Записывать = Истина;
		
	Запрос = Новый Запрос;
	//++ Бозырь С.Р. 23.08.2025 Дипломная работа - исправление (убрала условие на отбор по номенклатуре работы специалиста)
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугУслуги.Номенклатура,
		|	СУММА(РеализацияТоваровУслугУслуги.Сумма) КАК Сумма
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
		|ГДЕ
		|	РеализацияТоваровУслугУслуги.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугУслуги.Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//-- Бозырь С.Р.
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыСКлиентами.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Клиент = Контрагент;
		Движение.Договор = Договор;
		Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Сумма;
		
	КонецЦикла;	
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
