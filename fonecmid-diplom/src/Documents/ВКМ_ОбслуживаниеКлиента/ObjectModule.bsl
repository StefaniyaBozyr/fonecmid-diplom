#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = "";
	
	Если ЭтоНовый() Тогда
			
		ДатаПроведения = Формат(ДатаПроведенияРабот, "ДФ=dd.MM.yyyy; ДП=-;");
		НачалоРабот = Формат(ВремяНачалаРаботПлан, "ДЛФ=T; ДП=-;");
		ОкончаниеРабот = Формат(ВремяОкончанияРаботПлан, "ДЛФ=T; ДП=-;");
		НазначенныйСпециалист = ?(ЗначениеЗаполнено(Специалист), Специалист, "не назначен");
		
		ТекстСообщения = СтрШаблон("Создана новая заявка на обслуживание клиента %1! %2 Специалист: %3 %2 Проведение работ запланировано на %4 с %5 по %6",
									Клиент, Символы.ПС, НазначенныйСпециалист, ДатаПроведения, НачалоРабот, ОкончаниеРабот);
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
			|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
			|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботПлан,
			|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРаботПлан
			|ПОМЕСТИТЬ ВТ_СтарыеДанные
			|ИЗ
			|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
			|ГДЕ
			|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_СтарыеДанные.Специалист.Наименование КАК СтароеЗначение,
			|	&Специалист КАК НовоеЗначение,
			|	""Специалист"" КАК Реквизит
			|ИЗ
			|	ВТ_СтарыеДанные КАК ВТ_СтарыеДанные
			|ГДЕ
			|	ВТ_СтарыеДанные.Специалист <> &Специалист
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_СтарыеДанные.ДатаПроведенияРабот,
			|	&ДатаПроведенияРабот,
			|	""Дата проведения работ""
			|ИЗ
			|	ВТ_СтарыеДанные КАК ВТ_СтарыеДанные
			|ГДЕ
			|	ВТ_СтарыеДанные.ДатаПроведенияРабот <> &ДатаПроведенияРабот
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_СтарыеДанные.ВремяНачалаРаботПлан,
			|	&ВремяНачалаРаботПлан,
			|	""Время начала работ""
			|ИЗ
			|	ВТ_СтарыеДанные КАК ВТ_СтарыеДанные
			|ГДЕ
			|	ВТ_СтарыеДанные.ВремяНачалаРаботПлан <> &ВремяНачалаРаботПлан
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВТ_СтарыеДанные.ВремяОкончанияРаботПлан,
			|	&ВремяОкончанияРаботПлан,
			|	""Время окончания работ""
			|ИЗ
			|	ВТ_СтарыеДанные КАК ВТ_СтарыеДанные
			|ГДЕ
			|	ВТ_СтарыеДанные.ВремяОкончанияРаботПлан <> &ВремяОкончанияРаботПлан";
		
		Запрос.УстановитьПараметр("Специалист", Специалист);
		Запрос.УстановитьПараметр("ДатаПроведенияРабот", ДатаПроведенияРабот);
		Запрос.УстановитьПараметр("ВремяНачалаРаботПлан", ВремяНачалаРаботПлан);
		Запрос.УстановитьПараметр("ВремяОкончанияРаботПлан", ВремяОкончанияРаботПлан);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ТекстИзменений = "";
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Реквизит = ВыборкаДетальныеЗаписи.Реквизит; 
			
			Если Реквизит = "Дата проведения работ" Тогда
				НовоеЗначение = Формат(ВыборкаДетальныеЗаписи.НовоеЗначение, "ДФ=dd.MM.yyyy; ДП=-;");
				СтароеЗначение = Формат(ВыборкаДетальныеЗаписи.СтароеЗначение, "ДФ=dd.MM.yyyy; ДП=-;");
			ИначеЕсли Реквизит = "Время начала работ" Или ВыборкаДетальныеЗаписи.Реквизит = "Время окончания работ" Тогда
				НовоеЗначение = Формат(ВыборкаДетальныеЗаписи.НовоеЗначение, "ДЛФ=T; ДП=-;");
				СтароеЗначение = Формат(ВыборкаДетальныеЗаписи.СтароеЗначение, "ДЛФ=T; ДП=-;");
			Иначе
				НовоеЗначение = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.НовоеЗначение), ВыборкаДетальныеЗаписи.НовоеЗначение, "-");
				СтароеЗначение = ?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СтароеЗначение), ВыборкаДетальныеЗаписи.СтароеЗначение, "-");
			КонецЕсли;
						
			ТекстИзменений = СтрШаблон("%1%2%3: %4 (пред. значение: %5)", ТекстИзменений, Символы.ПС, Реквизит, НовоеЗначение, СтароеЗначение); 
			
		КонецЦикла;
		
		Если ТекстИзменений <> "" Тогда
			
			ТекстСообщения = СтрШаблон("В заявку на обслуживание клиента %1 внесены изменения! %2", Клиент, ТекстИзменений);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстСообщения) Тогда
		
		ВКМ_Телеграм.СоздатьУведомлениеТелеграмБоту(ТекстСообщения);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.ВидДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ДатаНачалаДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ДатаОкончанияДействияДоговора,
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы,
		|	ДоговорыКонтрагентов.Представление КАК ПредставлениеДоговора,
		|	ДоговорыКонтрагентов.ПометкаУдаления
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Договор";
	
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТекстСообщения = "";
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Если ВыборкаДетальныеЗаписи.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
			
			ТекстСообщения = СтрШаблон("Вид выбранного договора %1 - %2. Необходимо выбрать договор с видом ""Абонентское обслуживание""", ВыборкаДетальныеЗаписи.ПредставлениеДоговора, ВыборкаДетальныеЗаписи.ВидДоговора);
			
		ИначеЕсли Дата < ВыборкаДетальныеЗаписи.ДатаНачалаДействияДоговора Или Дата > ВыборкаДетальныеЗаписи.ДатаОкончанияДействияДоговора Тогда
			
			ТекстСообщения = СтрШаблон("Дата документа абонентского обслуживания должна попадать в период действия договора");
		
		ИначеЕсли ВыборкаДетальныеЗаписи.ПометкаУдаления Тогда
			
			ТекстСообщения = СтрШаблон("Выбранный договор %1 помечен на удаление!");
			
		Иначе
				
			СтоимостьЧасаРаботы = ВыборкаДетальныеЗаписи.СтоимостьЧасаРаботы;	
		
		КонецЕсли;
		
	Иначе
		
		ТекстСообщения = СтрШаблон("Не удалось получить данные по договору");
		
	КонецЕсли;
		
	Если ТекстСообщения <> "" Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
			
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = ВыборкаДетальныеЗаписи.ЧасыКОплатеКлиенту * СтоимостьЧасаРаботы;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли