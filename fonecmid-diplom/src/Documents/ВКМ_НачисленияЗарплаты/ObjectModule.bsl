#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ,Режим)

	СформироватьДвижения();	
	
	РассчитатьОклад();
	
	РассчитатьОтпуск();
	
	РассчитатьПроцентОтРабот();  
	
	РассчитатьУдержанияНДФЛ();  
	
	СформироватьДвиженияПоВзаиморасчетам();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
	СформироватьДвиженияПоОкладу();
	СформироватьДвиженияПоОтпускам();
	
	СформироватьДвиженияПоПроцентамОтРаботы();
	
	СформироватьДвиженияПоУдержаниям();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОкладу()
	
	Оклад = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад;
	
	ВыборкаДат = МинимальнаяИМаксимальнаяДатыПоВидуРасчета(Оклад);
	
	Если ВыборкаДат.Следующий() Тогда
		
		МинимальнаяДатаНачала = ВыборкаДат.МинимальнаяДатаНачала;
		МаксимальнаяДатаОкончания = ВыборкаДат.МаксимальнаяДатаОкончания;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
		|	ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника,
		|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы,
		|	ВКМ_НачисленияЗарплатыНачисления.НачалоПериода,
		|	ВКМ_НачисленияЗарплатыНачисления.КонецПериода
		|ПОМЕСТИТЬ ВТ_ИсходныеДанные
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.КатегорияСотрудника,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад
		|ПОМЕСТИТЬ ВТ_ИзмененияОклада
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&МинимальнаяДатаНачала, (Сотрудник, КатегорияСотрудника) В
		|		(ВЫБРАТЬ
		|			ВТ_ИсходныеДанные.Сотрудник КАК Сотрудник,
		|			ВТ_ИсходныеДанные.КатегорияСотрудника КАК КатегорияСотрудника
		|		ИЗ
		|			ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудников.Сотрудник,
		|	ВКМ_УсловияОплатыСотрудников.КатегорияСотрудника,
		|	ВКМ_УсловияОплатыСотрудников.Период,
		|	ВКМ_УсловияОплатыСотрудников.Оклад
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
		|	И ВКМ_УсловияОплатыСотрудников.Период <= &МаксимальнаяДатаОкончания
		|	И (ВКМ_УсловияОплатыСотрудников.Сотрудник, ВКМ_УсловияОплатыСотрудников.КатегорияСотрудника) В
		|		(ВЫБРАТЬ
		|			ВТ_ИсходныеДанные.Сотрудник КАК Сотрудник,
		|			ВТ_ИсходныеДанные.КатегорияСотрудника КАК КатегорияСотрудника
		|		ИЗ
		|			ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыНачала.Сотрудник,
		|	ДатыНачала.КатегорияСотрудника,
		|	ДатыНачала.Период КАК ДатаНачала,
		|	ДатыНачала.Оклад,
		|	МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатыОкончания.Период, СЕКУНДА, -1), ДАТАВРЕМЯ(3999, 12, 31))) КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
		|ИЗ
		|	ВТ_ИзмененияОклада КАК ДатыНачала
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияОклада КАК ДатыОкончания
		|		ПО ДатыНачала.Сотрудник = ДатыОкончания.Сотрудник
		|		И ДатыНачала.КатегорияСотрудника = ДатыОкончания.КатегорияСотрудника
		|		И ДатыНачала.Период < ДатыОкончания.Период
		|СГРУППИРОВАТЬ ПО
		|	ДатыНачала.Сотрудник,
		|	ДатыНачала.КатегорияСотрудника,
		|	ДатыНачала.Период,
		|	ДатыНачала.Оклад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсходныеДанные.Сотрудник,
		|	ВТ_ИсходныеДанные.КатегорияСотрудника,
		|	ВТ_ИсходныеДанные.ВидРасчета,
		|	ВТ_ИсходныеДанные.ГрафикРаботы,
		|	ВТ_ИнтервалыОклада.Оклад КАК Показатель,
		|	ВЫБОР
		|		КОГДА ВТ_ИнтервалыОклада.ДатаНачала > ВТ_ИсходныеДанные.НачалоПериода
		|			ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
		|		ИНАЧЕ ВТ_ИсходныеДанные.НачалоПериода
		|	КОНЕЦ КАК ПериодДействияНачало,
		|	ВЫБОР
		|		КОГДА ВТ_ИнтервалыОклада.ДатаОкончания < ВТ_ИсходныеДанные.КонецПериода
		|			ТОГДА ВТ_ИнтервалыОклада.ДатаОкончания
		|		ИНАЧЕ КОНЕЦПЕРИОДА(ВТ_ИсходныеДанные.КонецПериода, ДЕНЬ)
		|	КОНЕЦ КАК ПериодДействияКонец
		|ИЗ
		|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
		|		ПО ВТ_ИсходныеДанные.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
		|		И ВТ_ИсходныеДанные.КатегорияСотрудника = ВТ_ИнтервалыОклада.КатегорияСотрудника
		|		И ВТ_ИсходныеДанные.НачалоПериода <= ВТ_ИнтервалыОклада.ДатаОкончания
		|		И ВТ_ИсходныеДанные.КонецПериода >= ВТ_ИнтервалыОклада.ДатаНачала";
	
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("ВидРасчета", Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = Дата;
		
	КонецЦикла;
	
КОнецПроцедуры

Процедура СформироватьДвиженияПоОтпускам()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника,
		|	ВКМ_НачисленияЗарплатыНачисления.ГрафикРаботы,
		|	ВКМ_НачисленияЗарплатыНачисления.НачалоПериода КАК ПериодДействияНачало,
		|	ВКМ_НачисленияЗарплатыНачисления.КонецПериода КАК ПериодДействияКонец,
		|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
		|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачисленияЗарплатыНачисления.НачалоПериода, МЕСЯЦ, -12), МЕСЯЦ) КАК
		|		БазовыйПериодНачало,
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачисленияЗарплатыНачисления.КонецПериода, МЕСЯЦ, -1), МЕСЯЦ) КАК БазовыйПериодКонец
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = Дата;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДвиженияПоПроцентамОтРаботы()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	|	ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника КАК КатегорияСотрудника
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(ВКМ_НачисленияЗарплатыНачисления.ВидРасчета) = ТИП(ПланВидовРасчета.ВКМ_ДополнительныеНачисления)
	|	И ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника = ЗНАЧЕНИЕ(Перечисление.ВКМ_КатегорииСотрудников.Специалисты)";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ПериодРегистрации = Дата;

	КонецЦикла;

КонецПроцедуры

Процедура СформироватьДвиженияПоУдержаниям()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника КАК КатегорияСотрудника
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.КатегорияСотрудника";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодРегистрации = Дата; 
		Движение.БазовыйПериодНачало = НачалоДня(Дата);
		Движение.БазовыйПериодКонец = КонецДня(Дата);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ФактическиОтработано,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|ГДЕ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		
		Движение.Результат = Движение.Показатель * ВыборкаДетальныеЗаписи.ФактическиОтработано / ВыборкаДетальныеЗаписи.Норма;
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.ФактическиОтработано;
	
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК ОсновныеНачисления,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК ДополнительныеНачисления,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК ОтработаноДней,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ФактическийПериод
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("КатегорияСотрудника");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];  
		
		Движение.ОтработаноДней = ВыборкаДетальныеЗаписи.ОтработаноДней;
		
		Если ВыборкаДетальныеЗаписи.ФактическийПериод = 0 Тогда
			
			Движение.Результат = 0;
			Продолжить;
			
		КонецЕсли;
		
		Движение.Результат = (ВыборкаДетальныеЗаписи.ОсновныеНачисления + ВыборкаДетальныеЗаписи.ДополнительныеНачисления) 
								* ВыборкаДетальныеЗаписи.ФактическийПериод / ВыборкаДетальныеЗаписи.ОтработаноДней; 
		
	КонецЦикла; 
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьПроцентОтРабот()
	
	ПроцентОтРабот = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот;
	
	ВыборкаДат = МинимальнаяИМаксимальнаяДатыПоВидуРасчета(ПроцентОтРабот);
	
	Если ВыборкаДат.Следующий() Тогда
		
		НачалоМесяца = НачалоМесяца(ВыборкаДат.МинимальнаяДатаНачала);
		КонецМесяца = КонецМесяца(ВыборкаДат.МаксимальнаяДатаОкончания);
		
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки,
		|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот КАК Результат
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
		|				&НачалоМесяца,
		|				&КонецМесяца,
		|				,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|ГДЕ
		|	НЕ ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца);
	Запрос.УстановитьПараметр("ВидРасчета", ПроцентОтРабот);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Движение = Движения.ВКМ_ДополнительныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = ВыборкаДетальныеЗаписи.Результат;

	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьУдержанияНДФЛ()
		
	РазмерНДФЛ = Константы.ВКМ_НДФЛ.Получить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК ДополнительныеНачисления,
		|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК ОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|ГДЕ
		|	ВКМ_Удержания.Регистратор = &Ссылка
		|	И ВКМ_Удержания.ВидРасчета = &НДФЛ";
	
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = (ВыборкаДетальныеЗаписи.ОсновныеНачисления + ВыборкаДетальныеЗаписи.ДополнительныеНачисления) * РазмерНДФЛ / 100;
				
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияПоВзаиморасчетам() 
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Сотрудники
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
		|	СУММА(ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0)) КАК ДополнительныеНачисления,
		|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0)) КАК ОсновныеНачисления,
		|	СУММА(ЕСТЬNULL(ВКМ_Удержания.Результат, 0)) КАК Удержания
		|ИЗ
		|	ВТ_Сотрудники КАК ВТ_Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ПО ВТ_Сотрудники.Ссылка = ВКМ_ОсновныеНачисления.Регистратор
		|			И ВТ_Сотрудники.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ПО ВТ_Сотрудники.Ссылка = ВКМ_ДополнительныеНачисления.Регистратор
		|			И ВТ_Сотрудники.Сотрудник = ВКМ_ДополнительныеНачисления.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ПО ВТ_Сотрудники.Ссылка = ВКМ_Удержания.Регистратор
		|			И ВТ_Сотрудники.Сотрудник = ВКМ_Удержания.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Сотрудники.Сотрудник"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.Сумма = ВыборкаДетальныеЗаписи.ОсновныеНачисления + ВыборкаДетальныеЗаписи.ДополнительныеНачисления - ВыборкаДетальныеЗаписи.Удержания;
		
	КонецЦикла;
	
КонецПроцедуры

Функция МинимальнаяИМаксимальнаяДатыПоВидуРасчета(ВидРасчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка,
		|	МИНИМУМ(ВКМ_НачисленияЗарплатыНачисления.НачалоПериода) КАК МинимальнаяДатаНачала,
		|	МАКСИМУМ(ВКМ_НачисленияЗарплатыНачисления.КонецПериода) КАК МаксимальнаяДатаОкончания
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &ВидРасчета
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ВидРасчета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

#КонецОбласти

#КонецЕсли